import React, { useState } from 'react';
import { Field } from 'react-final-form';
import classNames from 'classnames';
import PropTypes from 'prop-types';

import { intlShape } from '../../util/reactIntl';
import { propTypes } from '../../util/types';
import * as validators from '../../util/validators';

import { FieldSelect } from '../../components';

import css from './AuthenticationPage.module.css';

// Hidden input field
const FieldHidden = props => {
  const { name } = props;
  return (
    <Field id={name} name={name} type="hidden" className={css.unitTypeHidden}>
      {fieldRenderProps => <input {...fieldRenderProps?.input} />}
    </Field>
  );
};

// User Type Card Component
const UserTypeCard = ({ userType, isSelected, onClick, intl }) => {
  const getIcon = (type) => {
    if (type === 'customer') {
      return (
        <div className={css.customerIcon}>
          <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M24.9719 32.5781L20 37.4453C11.8633 37.4453 8.20312 40 8.20312 40H3.125C2.47813 40 1.95312 39.475 1.95312 38.8281V32.8453C1.95312 29.5 3.95391 26.5195 7.05 25.2531L10.0781 24.0141C10.0781 24.0141 11.6273 25.8203 12.4219 23.0555L16.4313 21.4156C16.5719 21.3578 16.7227 21.3281 16.875 21.3281H20L24.9719 32.5781Z" fill="#A7EBE8" />
            <path d="M38.0469 32.8453V38.8281C38.0469 39.475 37.5219 40 36.875 40H31.7969C31.7969 40 28.1367 37.4453 20 37.4453V21.3281H23.125C23.2773 21.3281 23.4281 21.3578 23.5687 21.4156L26.9531 22.8C26.9531 22.8 26.9531 22.8 26.9539 22.8008C26.9688 22.8407 27.4594 24.1071 28.125 24.1071C28.8016 24.1071 29.2969 23.7587 29.2969 23.7587L32.95 25.2532C36.0461 26.5195 38.0469 29.5 38.0469 32.8453Z" fill="#55DAD3" />
            <path d="M12.4219 23.0557V31.8752C12.4219 32.5221 11.8969 33.0471 11.25 33.0471C10.6031 33.0471 10.0781 32.5221 10.0781 31.8752V24.0143L12.4219 23.0557Z" fill="#FD8030" />
            <path d="M29.2969 23.7584V31.8748C29.2969 32.5217 28.7719 33.0467 28.125 33.0467C27.4781 33.0467 26.9531 32.5217 26.9531 31.8748V22.7998L29.2969 23.7584Z" fill="#E16928" />
            <path d="M23.6484 36.2281L20 40H8.20312V34.2188C8.20312 32.2773 9.77734 30.7031 11.7188 30.7031H20L23.6484 36.2281Z" fill="#FDA95A" />
            <path d="M31.7969 34.2188V40H20V30.7031H28.2812C30.2227 30.7031 31.7969 32.2773 31.7969 34.2188Z" fill="#FD8030" />
            <path d="M22.1484 25.6367L20 29.2969C17.6305 29.2969 15.7031 27.3695 15.7031 25V21.25C15.7031 20.6031 16.2281 20.0781 16.875 20.0781H20L22.1484 25.6367Z" fill="#FDBBA7" />
            <path d="M24.2969 21.25V25C24.2969 27.3695 22.3695 29.2969 20 29.2969V20.0781H23.125C23.7719 20.0781 24.2969 20.6031 24.2969 21.25Z" fill="#FDA38A" />
            <path d="M25.1445 7.26562L20 15.5469H9.375C8.72813 15.5469 8.20312 15.0219 8.20312 14.375V8.125C8.20312 5.27656 10.3609 2.92266 13.1281 2.6125L13.3672 2.28437C14.407 0.853906 16.0844 0 17.8531 0H20L25.1445 7.26562Z" fill="#46646E" />
            <path d="M31.7969 1.17188V9.6875C31.7969 12.9187 29.168 15.5469 25.9375 15.5469H20V0H30.625C31.2719 0 31.7969 0.525 31.7969 1.17188Z" fill="#324650" />
            <path d="M14.2969 11.875V16.875C14.2969 17.5219 13.7719 18.0469 13.125 18.0469H10.625C8.6 18.0469 6.95312 16.4 6.95312 14.375C6.95312 12.35 8.6 10.7031 10.625 10.7031H13.125C13.7719 10.7031 14.2969 11.2281 14.2969 11.875Z" fill="#FDBBA7" />
            <path d="M33.0469 14.375C33.0469 16.4 31.4 18.0469 29.375 18.0469H26.875C26.2281 18.0469 25.7031 17.5219 25.7031 16.875V11.875C25.7031 11.2281 26.2281 10.7031 26.875 10.7031H29.375C31.4 10.7031 33.0469 12.35 33.0469 14.375Z" fill="#FDA38A" />
            <path d="M23.3492 17.1875L20 24.9219C15.5633 24.9219 11.9531 21.3117 11.9531 16.875V10.4125C11.9531 9.19375 12.9437 8.20312 14.1625 8.20312C14.832 8.20312 15.4977 8.30078 16.1391 8.49297L17.2312 8.82109C18.1359 9.09219 19.0664 9.24766 20 9.2875L23.3492 17.1875Z" fill="#FCCABB" />
            <path d="M28.0469 10.4125V16.875C28.0469 21.3117 24.4367 24.9219 20 24.9219V9.2875C21.6922 9.36094 23.393 9.05703 24.968 8.38203C25.2445 8.26328 25.5367 8.20312 25.8375 8.20312C27.0563 8.20312 28.0469 9.19375 28.0469 10.4125Z" fill="#FDBBA7" />
            <path d="M21.2113 20.9022L20.0003 22.0897C19.391 22.0897 18.7816 21.9506 18.2261 21.6733C17.6472 21.3835 17.4128 20.6795 17.7019 20.1006C17.9918 19.5217 18.6957 19.2874 19.2746 19.5764C19.5019 19.6905 19.7511 19.7467 20.0003 19.7467L21.2113 20.9022Z" fill="#FDBBA7" />
            <path d="M21.7742 21.6733C21.2187 21.9506 20.6094 22.0897 20 22.0897V19.7467C20.2492 19.7467 20.4984 19.6905 20.7258 19.5764C21.3047 19.2874 22.0086 19.5217 22.2984 20.1006C22.5875 20.6795 22.3531 21.3835 21.7742 21.6733Z" fill="#FDA38A" />
          </svg>

        </div>
      );
    } else if (type === 'provider') {
      return (
        <div className={css.providerIcon}>
          <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_3402_40117)">
              <path d="M2.60898 18.6509L8.54305 16.3789H13.308L19.2421 18.6509C20.8039 19.1924 21.8511 20.6639 21.8511 22.317L19.3205 30.9883H1.17188C0.524687 30.9883 0 30.4636 0 29.8164V22.317C0 20.664 1.04727 19.1925 2.60898 18.6509Z" fill="#B9E1FC" />
              <path d="M19.2387 18.6509L13.3046 16.3789H10.9219V30.9883H19.3172L21.8477 22.317C21.8477 20.664 20.8005 19.1925 19.2387 18.6509Z" fill="#7DC6EF" />
              <path d="M7.77344 15.1626H14.0714V18.1319C14.0714 19.871 12.6616 21.2809 10.9224 21.2809C9.18328 21.2809 7.77344 19.871 7.77344 18.1319V15.1626Z" fill="#F5C1AD" />
              <path d="M20.7574 18.6509L26.6915 16.3789H31.4565L37.3905 18.6509C38.9523 19.1925 39.9996 20.664 39.9996 22.317V29.8164C39.9996 30.4636 39.4749 30.9883 38.8277 30.9883H19.3203C18.6731 30.9883 18.1484 30.4636 18.1484 29.8164V22.317C18.1484 20.664 19.1956 19.1925 20.7574 18.6509Z" fill="#FF5F72" />
              <path d="M37.3945 18.6509L31.4604 16.3789H29.0781V30.9883H38.8316C39.4787 30.9883 40.0034 30.4636 40.0034 29.8164V22.317C40.0034 20.664 38.9562 19.1925 37.3945 18.6509Z" fill="#EF0A52" />
              <path d="M25.9219 15.1626H32.2198V18.1319C32.2198 19.871 30.81 21.2809 29.0709 21.2809C27.3317 21.2809 25.9219 19.871 25.9219 18.1319V15.1626Z" fill="#885345" />
              <path d="M29.0781 21.2809C30.8172 21.2808 32.2269 19.871 32.2269 18.1319V15.1626H29.0781V21.2809Z" fill="#5E342D" />
              <path d="M22.8985 9.98371C22.8985 13.3963 25.665 16.1628 29.0776 16.1628C32.4902 16.1628 35.2566 13.3963 35.2566 9.98371V6.2466L29.0775 0.666992L22.8984 6.2466V9.98371H22.8985Z" fill="#B77465" />
              <path d="M29.0781 16.1625C32.4906 16.1625 35.257 13.3961 35.257 9.98348V6.24645L29.0781 0.666992V16.1625Z" fill="#885345" />
              <path d="M29.0732 0V0.000703125L29.0728 0C25.1983 7.8125e-05 23.1338 2.52438 22.8984 5.72555V6.25547H25.6001C27.5181 6.25547 29.073 4.70336 29.073 2.78867C29.0731 4.70336 30.628 6.25547 32.546 6.25547H35.2477V5.72555C35.0123 2.52438 32.9477 7.8125e-05 29.0732 0Z" fill="#483B89" />
              <path d="M32.5509 6.25547H35.2526V5.72555C35.0172 2.52438 32.9527 7.8125e-05 29.0781 0V0.000703125V2.79703C29.0828 4.70789 30.6357 6.25547 32.5509 6.25547Z" fill="#21104C" />
              <path d="M10.9219 21.2809H10.9221C12.6613 21.2809 14.0711 19.871 14.0711 18.1319V15.1626H10.9219V21.2809Z" fill="#EEAA93" />
              <path d="M4.75 9.98371C4.75 13.3963 7.51649 16.1628 10.9291 16.1628C14.3416 16.1628 17.1081 13.3963 17.1081 9.98371V6.2466L10.9291 0.666992L4.75 6.2466V9.98371Z" fill="#F7CFC0" />
              <path d="M10.9219 0.667148V16.1627H10.9221C14.3347 16.1627 17.1012 13.3962 17.1012 9.98363V6.2466L10.9221 0.666992L10.9219 0.667148Z" fill="#F5C1AD" />
              <path d="M10.9248 0V0.000703125L10.9244 0C7.04984 7.8125e-05 4.98531 2.52438 4.75 5.72555V6.25547H7.45164C9.36969 6.25547 10.9246 4.35117 10.9246 4.35117C10.9246 4.35117 12.4796 6.25547 14.3976 6.25547H17.0992V5.72555C16.8639 2.52438 14.7994 7.8125e-05 10.9248 0Z" fill="#F4B765" />
              <path d="M10.9221 0V0.000703125L10.9219 0.0003125V4.35109C10.9219 4.35109 12.4769 6.25539 14.3948 6.25539H17.0965V5.72547C16.8613 2.52438 14.7967 7.8125e-05 10.9221 0Z" fill="#F48C67" />
              <path d="M12.3227 28.6107L17.8009 26.5132H22.1998L27.678 28.6107C29.1198 29.1106 30.0866 30.469 30.0866 31.995V38.9183C30.0866 39.5158 29.6022 40.0001 29.0047 40.0001H10.9959C10.3984 40.0001 9.91406 39.5158 9.91406 38.9183V31.995C9.91414 30.469 10.8809 29.1106 12.3227 28.6107Z" fill="#68E188" />
              <path d="M27.6774 28.6107L22.1992 26.5132H20V40.0001H29.0041C29.6016 40.0001 30.086 39.5158 30.086 38.9183V31.995C30.0859 30.469 29.1191 29.1106 27.6774 28.6107Z" fill="#00B46D" />
              <path d="M17.0938 25.3906H22.9079V28.1318C22.9079 29.7373 21.6063 31.0388 20.0009 31.0388C18.3953 31.0388 17.0938 29.7373 17.0938 28.1318V25.3906H17.0938Z" fill="#F5C1AD" />
              <path d="M20 31.0388C21.6054 31.0387 22.9069 29.7373 22.9069 28.1318V25.3906H20V31.0388Z" fill="#EEAA93" />
              <path d="M13.948 17.7471L13.9453 20.3492C13.9453 23.6908 16.6561 26.3997 20 26.3997C23.3439 26.3997 26.0547 23.6908 26.0547 20.3492L26.0503 16.1799C25.912 14.2985 25.1278 12.6558 23.702 11.6431L13.948 17.7471Z" fill="#F7CFC0" />
              <path d="M23.7018 11.6431L20 13.9596V26.3997C23.3438 26.3996 26.0545 23.6907 26.0545 20.3492L26.0501 16.1799C25.9117 14.2985 25.1276 12.6558 23.7018 11.6431Z" fill="#F5C1AD" />
              <path d="M19.9971 10.5732C16.2005 10.5733 14.1776 13.0451 13.947 16.1796L13.9453 17.7468C14.942 18.3996 16.1332 18.7807 17.4141 18.7807C20.9139 18.7807 23.7511 15.9454 23.7511 12.4481C23.7511 12.1754 23.7319 11.9073 23.6984 11.6437C22.7487 10.9692 21.5153 10.5733 19.9976 10.5733H19.9971V10.5732Z" fill="#F9DA62" />
              <path d="M20 10.5732V18.2302C22.2116 17.2418 23.7535 15.0256 23.7535 12.448C23.7535 12.1753 23.7343 11.9072 23.7009 11.6436C22.7512 10.9692 21.5177 10.5733 20 10.5732Z" fill="#F4B765" />
            </g>
            <defs>
              <clipPath id="clip0_3402_40117">
                <rect width="40" height="40" fill="white" />
              </clipPath>
            </defs>
          </svg>

        </div>
      );
    }
    return null;
  };

  const getDescription = (type) => {
    if (type === 'customer') {
      return intl.formatMessage({ id: 'FieldSelectUserType.customerDescription' });
    } else if (type === 'provider') {
      return intl.formatMessage({ id: 'FieldSelectUserType.providerDescription' });
    }
    return '';
  };

  return (
    <div
      className={classNames(css.userTypeCard, { [css.selected]: isSelected })}
      onClick={() => onClick(userType)}
    >
      {getIcon(userType)}
      <div className={css.cardContent}>
        <h3 className={css.cardTitle}>
          {intl.formatMessage({ id: `FieldSelectUserType.${userType}Label` })}
        </h3>
        <p className={css.cardDescription}>{getDescription(userType)}</p>
      </div>
    </div>
  );
};

// Selected User Type Display
const SelectedUserType = ({ userType, onClear, intl }) => {
  const getIcon = (type) => {
    if (type === 'customer') {
      return (
        <div className={css.customerIcon}>
                <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M24.9719 32.5781L20 37.4453C11.8633 37.4453 8.20312 40 8.20312 40H3.125C2.47813 40 1.95312 39.475 1.95312 38.8281V32.8453C1.95312 29.5 3.95391 26.5195 7.05 25.2531L10.0781 24.0141C10.0781 24.0141 11.6273 25.8203 12.4219 23.0555L16.4313 21.4156C16.5719 21.3578 16.7227 21.3281 16.875 21.3281H20L24.9719 32.5781Z" fill="#A7EBE8" />
            <path d="M38.0469 32.8453V38.8281C38.0469 39.475 37.5219 40 36.875 40H31.7969C31.7969 40 28.1367 37.4453 20 37.4453V21.3281H23.125C23.2773 21.3281 23.4281 21.3578 23.5687 21.4156L26.9531 22.8C26.9531 22.8 26.9531 22.8 26.9539 22.8008C26.9688 22.8407 27.4594 24.1071 28.125 24.1071C28.8016 24.1071 29.2969 23.7587 29.2969 23.7587L32.95 25.2532C36.0461 26.5195 38.0469 29.5 38.0469 32.8453Z" fill="#55DAD3" />
            <path d="M12.4219 23.0557V31.8752C12.4219 32.5221 11.8969 33.0471 11.25 33.0471C10.6031 33.0471 10.0781 32.5221 10.0781 31.8752V24.0143L12.4219 23.0557Z" fill="#FD8030" />
            <path d="M29.2969 23.7584V31.8748C29.2969 32.5217 28.7719 33.0467 28.125 33.0467C27.4781 33.0467 26.9531 32.5217 26.9531 31.8748V22.7998L29.2969 23.7584Z" fill="#E16928" />
            <path d="M23.6484 36.2281L20 40H8.20312V34.2188C8.20312 32.2773 9.77734 30.7031 11.7188 30.7031H20L23.6484 36.2281Z" fill="#FDA95A" />
            <path d="M31.7969 34.2188V40H20V30.7031H28.2812C30.2227 30.7031 31.7969 32.2773 31.7969 34.2188Z" fill="#FD8030" />
            <path d="M22.1484 25.6367L20 29.2969C17.6305 29.2969 15.7031 27.3695 15.7031 25V21.25C15.7031 20.6031 16.2281 20.0781 16.875 20.0781H20L22.1484 25.6367Z" fill="#FDBBA7" />
            <path d="M24.2969 21.25V25C24.2969 27.3695 22.3695 29.2969 20 29.2969V20.0781H23.125C23.7719 20.0781 24.2969 20.6031 24.2969 21.25Z" fill="#FDA38A" />
            <path d="M25.1445 7.26562L20 15.5469H9.375C8.72813 15.5469 8.20312 15.0219 8.20312 14.375V8.125C8.20312 5.27656 10.3609 2.92266 13.1281 2.6125L13.3672 2.28437C14.407 0.853906 16.0844 0 17.8531 0H20L25.1445 7.26562Z" fill="#46646E" />
            <path d="M31.7969 1.17188V9.6875C31.7969 12.9187 29.168 15.5469 25.9375 15.5469H20V0H30.625C31.2719 0 31.7969 0.525 31.7969 1.17188Z" fill="#324650" />
            <path d="M14.2969 11.875V16.875C14.2969 17.5219 13.7719 18.0469 13.125 18.0469H10.625C8.6 18.0469 6.95312 16.4 6.95312 14.375C6.95312 12.35 8.6 10.7031 10.625 10.7031H13.125C13.7719 10.7031 14.2969 11.2281 14.2969 11.875Z" fill="#FDBBA7" />
            <path d="M33.0469 14.375C33.0469 16.4 31.4 18.0469 29.375 18.0469H26.875C26.2281 18.0469 25.7031 17.5219 25.7031 16.875V11.875C25.7031 11.2281 26.2281 10.7031 26.875 10.7031H29.375C31.4 10.7031 33.0469 12.35 33.0469 14.375Z" fill="#FDA38A" />
            <path d="M23.3492 17.1875L20 24.9219C15.5633 24.9219 11.9531 21.3117 11.9531 16.875V10.4125C11.9531 9.19375 12.9437 8.20312 14.1625 8.20312C14.832 8.20312 15.4977 8.30078 16.1391 8.49297L17.2312 8.82109C18.1359 9.09219 19.0664 9.24766 20 9.2875L23.3492 17.1875Z" fill="#FCCABB" />
            <path d="M28.0469 10.4125V16.875C28.0469 21.3117 24.4367 24.9219 20 24.9219V9.2875C21.6922 9.36094 23.393 9.05703 24.968 8.38203C25.2445 8.26328 25.5367 8.20312 25.8375 8.20312C27.0563 8.20312 28.0469 9.19375 28.0469 10.4125Z" fill="#FDBBA7" />
            <path d="M21.2113 20.9022L20.0003 22.0897C19.391 22.0897 18.7816 21.9506 18.2261 21.6733C17.6472 21.3835 17.4128 20.6795 17.7019 20.1006C17.9918 19.5217 18.6957 19.2874 19.2746 19.5764C19.5019 19.6905 19.7511 19.7467 20.0003 19.7467L21.2113 20.9022Z" fill="#FDBBA7" />
            <path d="M21.7742 21.6733C21.2187 21.9506 20.6094 22.0897 20 22.0897V19.7467C20.2492 19.7467 20.4984 19.6905 20.7258 19.5764C21.3047 19.2874 22.0086 19.5217 22.2984 20.1006C22.5875 20.6795 22.3531 21.3835 21.7742 21.6733Z" fill="#FDA38A" />
          </svg>
        </div>
      );
    } else if (type === 'provider') {
      return (
        <div className={css.providerIcon}>
   <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_3402_40117)">
              <path d="M2.60898 18.6509L8.54305 16.3789H13.308L19.2421 18.6509C20.8039 19.1924 21.8511 20.6639 21.8511 22.317L19.3205 30.9883H1.17188C0.524687 30.9883 0 30.4636 0 29.8164V22.317C0 20.664 1.04727 19.1925 2.60898 18.6509Z" fill="#B9E1FC" />
              <path d="M19.2387 18.6509L13.3046 16.3789H10.9219V30.9883H19.3172L21.8477 22.317C21.8477 20.664 20.8005 19.1925 19.2387 18.6509Z" fill="#7DC6EF" />
              <path d="M7.77344 15.1626H14.0714V18.1319C14.0714 19.871 12.6616 21.2809 10.9224 21.2809C9.18328 21.2809 7.77344 19.871 7.77344 18.1319V15.1626Z" fill="#F5C1AD" />
              <path d="M20.7574 18.6509L26.6915 16.3789H31.4565L37.3905 18.6509C38.9523 19.1925 39.9996 20.664 39.9996 22.317V29.8164C39.9996 30.4636 39.4749 30.9883 38.8277 30.9883H19.3203C18.6731 30.9883 18.1484 30.4636 18.1484 29.8164V22.317C18.1484 20.664 19.1956 19.1925 20.7574 18.6509Z" fill="#FF5F72" />
              <path d="M37.3945 18.6509L31.4604 16.3789H29.0781V30.9883H38.8316C39.4787 30.9883 40.0034 30.4636 40.0034 29.8164V22.317C40.0034 20.664 38.9562 19.1925 37.3945 18.6509Z" fill="#EF0A52" />
              <path d="M25.9219 15.1626H32.2198V18.1319C32.2198 19.871 30.81 21.2809 29.0709 21.2809C27.3317 21.2809 25.9219 19.871 25.9219 18.1319V15.1626Z" fill="#885345" />
              <path d="M29.0781 21.2809C30.8172 21.2808 32.2269 19.871 32.2269 18.1319V15.1626H29.0781V21.2809Z" fill="#5E342D" />
              <path d="M22.8985 9.98371C22.8985 13.3963 25.665 16.1628 29.0776 16.1628C32.4902 16.1628 35.2566 13.3963 35.2566 9.98371V6.2466L29.0775 0.666992L22.8984 6.2466V9.98371H22.8985Z" fill="#B77465" />
              <path d="M29.0781 16.1625C32.4906 16.1625 35.257 13.3961 35.257 9.98348V6.24645L29.0781 0.666992V16.1625Z" fill="#885345" />
              <path d="M29.0732 0V0.000703125L29.0728 0C25.1983 7.8125e-05 23.1338 2.52438 22.8984 5.72555V6.25547H25.6001C27.5181 6.25547 29.073 4.70336 29.073 2.78867C29.0731 4.70336 30.628 6.25547 32.546 6.25547H35.2477V5.72555C35.0123 2.52438 32.9477 7.8125e-05 29.0732 0Z" fill="#483B89" />
              <path d="M32.5509 6.25547H35.2526V5.72555C35.0172 2.52438 32.9527 7.8125e-05 29.0781 0V0.000703125V2.79703C29.0828 4.70789 30.6357 6.25547 32.5509 6.25547Z" fill="#21104C" />
              <path d="M10.9219 21.2809H10.9221C12.6613 21.2809 14.0711 19.871 14.0711 18.1319V15.1626H10.9219V21.2809Z" fill="#EEAA93" />
              <path d="M4.75 9.98371C4.75 13.3963 7.51649 16.1628 10.9291 16.1628C14.3416 16.1628 17.1081 13.3963 17.1081 9.98371V6.2466L10.9291 0.666992L4.75 6.2466V9.98371Z" fill="#F7CFC0" />
              <path d="M10.9219 0.667148V16.1627H10.9221C14.3347 16.1627 17.1012 13.3962 17.1012 9.98363V6.2466L10.9221 0.666992L10.9219 0.667148Z" fill="#F5C1AD" />
              <path d="M10.9248 0V0.000703125L10.9244 0C7.04984 7.8125e-05 4.98531 2.52438 4.75 5.72555V6.25547H7.45164C9.36969 6.25547 10.9246 4.35117 10.9246 4.35117C10.9246 4.35117 12.4796 6.25547 14.3976 6.25547H17.0992V5.72555C16.8639 2.52438 14.7994 7.8125e-05 10.9248 0Z" fill="#F4B765" />
              <path d="M10.9221 0V0.000703125L10.9219 0.0003125V4.35109C10.9219 4.35109 12.4769 6.25539 14.3948 6.25539H17.0965V5.72547C16.8613 2.52438 14.7967 7.8125e-05 10.9221 0Z" fill="#F48C67" />
              <path d="M12.3227 28.6107L17.8009 26.5132H22.1998L27.678 28.6107C29.1198 29.1106 30.0866 30.469 30.0866 31.995V38.9183C30.0866 39.5158 29.6022 40.0001 29.0047 40.0001H10.9959C10.3984 40.0001 9.91406 39.5158 9.91406 38.9183V31.995C9.91414 30.469 10.8809 29.1106 12.3227 28.6107Z" fill="#68E188" />
              <path d="M27.6774 28.6107L22.1992 26.5132H20V40.0001H29.0041C29.6016 40.0001 30.086 39.5158 30.086 38.9183V31.995C30.0859 30.469 29.1191 29.1106 27.6774 28.6107Z" fill="#00B46D" />
              <path d="M17.0938 25.3906H22.9079V28.1318C22.9079 29.7373 21.6063 31.0388 20.0009 31.0388C18.3953 31.0388 17.0938 29.7373 17.0938 28.1318V25.3906H17.0938Z" fill="#F5C1AD" />
              <path d="M20 31.0388C21.6054 31.0387 22.9069 29.7373 22.9069 28.1318V25.3906H20V31.0388Z" fill="#EEAA93" />
              <path d="M13.948 17.7471L13.9453 20.3492C13.9453 23.6908 16.6561 26.3997 20 26.3997C23.3439 26.3997 26.0547 23.6908 26.0547 20.3492L26.0503 16.1799C25.912 14.2985 25.1278 12.6558 23.702 11.6431L13.948 17.7471Z" fill="#F7CFC0" />
              <path d="M23.7018 11.6431L20 13.9596V26.3997C23.3438 26.3996 26.0545 23.6907 26.0545 20.3492L26.0501 16.1799C25.9117 14.2985 25.1276 12.6558 23.7018 11.6431Z" fill="#F5C1AD" />
              <path d="M19.9971 10.5732C16.2005 10.5733 14.1776 13.0451 13.947 16.1796L13.9453 17.7468C14.942 18.3996 16.1332 18.7807 17.4141 18.7807C20.9139 18.7807 23.7511 15.9454 23.7511 12.4481C23.7511 12.1754 23.7319 11.9073 23.6984 11.6437C22.7487 10.9692 21.5153 10.5733 19.9976 10.5733H19.9971V10.5732Z" fill="#F9DA62" />
              <path d="M20 10.5732V18.2302C22.2116 17.2418 23.7535 15.0256 23.7535 12.448C23.7535 12.1753 23.7343 11.9072 23.7009 11.6436C22.7512 10.9692 21.5177 10.5733 20 10.5732Z" fill="#F4B765" />
            </g>
            <defs>
              <clipPath id="clip0_3402_40117">
                <rect width="40" height="40" fill="white" />
              </clipPath>
            </defs>
          </svg>
        </div>
      );
    }
    return null;
  };

  return (
    <div className={css.userTypeCOntent}>
          <h2 className={css.userTypeTitle}>
              {intl.formatMessage({ id: 'FieldSelectUserType.title' })}
            </h2>
      <div className={css.userTypeCard}>
        {getIcon(userType)}
        <div className={css.cardContent}>
          <h3 className={css.cardTitle}>
            {intl.formatMessage({ id: `FieldSelectUserType.${userType}Label` })}
          </h3>
          <p className={css.cardDescription}>
            {intl.formatMessage({ id: `FieldSelectUserType.${userType}Description` })}
          </p>
        </div>
      </div>
      {/* <button
        type="button"
        className={css.clearButton}
        onClick={onClear}
        aria-label={intl.formatMessage({ id: 'FieldSelectUserType.clearSelection' })}
      >
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
          <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
      </button> */}
    </div>
  );
};

/**
 * Return React Final Form Field that allows selecting user type.
 *
 * @component
 * @param {Object} props
 * @param {string} props.rootClassName - The root class that overrides the default class css.userTypeSelect
 * @param {string} props.className - The class that extends the root class
 * @param {string} props.name - The name of the field / input
 * @param {Array<propTypes.userType>} props.userTypes - The user types
 * @param {boolean} props.hasExistingUserType - Whether the user type already exists
 * @param {intlShape} props.intl - The intl object
 * @returns {JSX.Element}
 */
const FieldSelectUserType = props => {
  const { rootClassName, className, name, userTypes, hasExistingUserType, intl } = props;
  const hasMultipleUserTypes = userTypes?.length > 1;
  const classes = classNames(rootClassName || css.userTypeSelect, className);

  return (
    <Field name={name}>
      {fieldRenderProps => {
        const { input, meta } = fieldRenderProps;
        const selectedUserType = input.value;
        const [showSelection, setShowSelection] = useState(!selectedUserType);

        const handleUserTypeSelect = (userType) => {
          input.onChange(userType);
          setShowSelection(false);
        };

        const handleClearSelection = () => {
          input.onChange('');
          setShowSelection(true);
        };

        // If user type is preselected, don't show selection UI
        if (hasExistingUserType) {
          return <FieldHidden name={name} />;
        }

        // If only one user type, show hidden field
        if (!hasMultipleUserTypes) {
          return <FieldHidden name={name} />;
        }

        // Show selected user type at top
        if (selectedUserType && !showSelection) {
          return (
            <div className={classes}>
              <SelectedUserType
                userType={selectedUserType}
                onClear={handleClearSelection}
                intl={intl}
              />
            </div>
          );
        }

        // Show user type selection cards
        return (
          <div className={classes}>
            <h2 className={css.userTypeTitle}>
              {intl.formatMessage({ id: 'FieldSelectUserType.title' })}
            </h2>
            <div className={css.userTypeCards}>
              {userTypes.map(config => {
                const type = config.userType;
                return (
                  <UserTypeCard
                    key={type}
                    userType={type}
                    isSelected={selectedUserType === type}
                    onClick={handleUserTypeSelect}
                    intl={intl}
                  />
                );
              })}
            </div>
            {meta.error && meta.touched && (
              <div className={css.error}>{meta.error}</div>
            )}
            {!selectedUserType && meta.touched && (
              <div className={css.error}>
                {intl.formatMessage({ id: 'FieldSelectUserType.required' })}
              </div>
            )}
          </div>
        );
      }}
    </Field>
  );
};

FieldSelectUserType.defaultProps = {
  rootClassName: null,
  className: null,
};

FieldSelectUserType.propTypes = {
  rootClassName: PropTypes.string,
  className: PropTypes.string,
  name: PropTypes.string.isRequired,
  userTypes: propTypes.userTypes.isRequired,
  hasExistingUserType: PropTypes.bool.isRequired,
  intl: intlShape.isRequired,
};

export default FieldSelectUserType;
