@import '../../../styles/customMediaQueries.css';

:global(.image-gallery-thumbnails-container) {
  text-align: right !important;
  @media screen and (max-width: 768px) {
    text-align: center !important;
  }
}

:global(.image-gallery-thumbnails) {
  padding-top: 24px;
  padding-bottom: 18px;

  /*
   By default, the gallery controls the scroll position of the thumbnails when
   browsing the images. We change this logic to a freely scrollable container
   that the user controls. This overflow works together with the
   `disableThumbnailScroll` option in the component JS.
   */
  width: 100vw;
  overflow: auto;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 128px;

  @media (--viewportMedium) {
    width: calc(100vw - 48px);
  }

  @media (--viewportLarge) {
    width: unset;
  }
}

:global(.image-gallery-thumbnail) {
  width: auto;
  border-radius: 8px;

  text-align: left !important;
  margin-right: 8px;

  &:first-child {
    margin-left: 0px;

    @media (--viewportMedium) {
      margin-left: 0;
    }
  }

  &:last-child {
    margin-right: 0px;

    @media (--viewportMedium) {
      margin-right: 0;
    }
  }

  &:hover,
  &:global(.active) {
    border-color: var(--marketplaceColor);
  }
  @media screen and (max-width: 768px) {
    width: 7px;
    height: 7px;
    border: 1px solid #fff !important;
    background-color: #fff;
    &:global(.active) {

      background-color: #F74DF4;
    }
  }
}

:global(.image-gallery-slide-wrapper) {
  background-color: var(--colorGrey100);


  @media (--viewportMedium) {
    border-radius: 10px;

    overflow: hidden;
  }
}

:global(.fullscreen) {
  background-color: var(--colorWhite) !important;

  & :global(.image-gallery-slide-wrapper) {
    background-color: transparent;
    border: none;
  }

  & :global(.image-gallery-thumbnails-container),
  & :global(.image-gallery-thumbnail) {
    text-align: center !important;
  }


& .navLeft,
& .navRight {
  position: absolute;
  width: 60px;

  border: 0;
  padding: 0;
  z-index: 1;
  top: 40%;

  /* center content */
  display: flex !important;
  align-items: center;
  justify-content: center;

  &:hover {
    cursor: pointer;


  }
}
}

.root {}

.itemWrapper,
.itemWrapperFullscreen {
  display: flex;
  align-items: center;
  justify-content: center;
}

.itemWrapper {}

.noImage {
  border: 1px solid var(--colorGrey100);
  border-radius: var(--borderRadiusMedium);
}

.itemWrapperFullscreen {
  height: calc(100vh - 0px);
}

.itemCentering {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.item {
  max-width: 100%;
  max-height: 100%;
  width: 100%;
    height: 100%;
    object-fit: contain;
}

.thumb {
  /* With the active thumbnail border (default 4px), make the result
   height a multiple of the baseline. */
  max-width: 97px;
  max-height: 70px;
  border-radius: 10px;
  @media screen and (max-width: 768px) {
  display: none;
    max-height: 56px;
  }
}

.navLeft,
.navRight {
  position: absolute;
  width: 60px;

  border: 0;
  padding: 0;
  z-index: 1;
  top: 18px;

  /* center content */
  display: flex;
  align-items: center;
  justify-content: center;
display: none;
  &:hover {
    cursor: pointer;


  }
}

.navLeft {
  left: 0;

  & .navArrowWrapper {
    padding-right: 2px;
  }
}

.navRight {
  right: 0;

  & .navArrowWrapper {
    padding-left: 2px;
  }
}

.navArrowWrapper {
  display: none;

  width: 40px;
  height: 40px;
  border-radius: 50%;

  background-color: rgba(255, 255, 255, 0.5);

  @media (--viewportLarge) {
    /* center content */
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

.openFullscreenWrapper {
  /* Hide on mobile. Currently react-image-gallery fullscreen mode is broken on
     mobile, and mobile doesn't really benefit from fullscreen anyways. */
  display: none;

  /* Position and dimensions */
  position: absolute;
  bottom: 18px;
  right: 18px;
  width: 97px;
  height: 70px;
  border-radius: 10px;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  overflow: hidden;

  /* Ensure the wrapper is on top of the navRight area */
  z-index: 1;

  @media (--viewportLarge) {
    display: block;
  }
}

.openFullscreen {
  composes: buttonSmall from global;

  /* Position and dimensions */
  position: relative;
  width: 100%;
  height: 100%;
  font-family: Mulish;
  font-weight: 500;
  font-size: 12px;
  line-height: 130%;
  letter-spacing: 0%;
  text-align: center;
  text-decoration: underline;
  text-decoration-style: solid;
  text-decoration-offset: 0%;
  text-decoration-thickness: 0%;
  text-decoration-skip-ink: auto;
  
  /* Background overlay for better text readability */
  background: rgba(0, 0, 0, 0.3);
  border: none;
  border-radius: 10px;
  color: white;
  
  /* Ensure the button is on top of the navRight area */
  z-index: 1;

  &:hover {
    background: rgba(0, 0, 0, 0.5);
  }
}

.close {
  composes: marketplaceModalCloseStyles from global;

  color: var(--colorGrey300);
  transition: var(--transitionStyleButton);

  &:enabled:hover,
  &:enabled:active {
    color: var(--colorBlack);
  }
}

.closeText {
  composes: marketplaceModalCloseText from global;
}

.closeIcon {
  composes: marketplaceModalCloseIcon from global;
}